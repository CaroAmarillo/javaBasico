package com.Gabriel.DemoManyToManyD.Controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.Gabriel.DemoManyToManyD.Models.AluMate;
import com.Gabriel.DemoManyToManyD.Models.Alumno;
import com.Gabriel.DemoManyToManyD.Models.DaoAluMate;
import com.Gabriel.DemoManyToManyD.Models.DaoAlumno;
import com.Gabriel.DemoManyToManyD.Models.DaoMateria;

@Controller
public class MainController {

	@Autowired
	private DaoAluMate daoAluMate;
	
	@Autowired
	private DaoAlumno daoAlumno;
	
	@Autowired
	private DaoMateria daoMateria;
	
	@RequestMapping(value="/formulario", method = RequestMethod.GET)
	public String cargarAlumnoGet(){
		
		return "formularioAlumno";
	}
	
	@RequestMapping(value="/formulario",method=RequestMethod.POST)
	public String cargarAlumnoPost(
			@RequestParam("name") String nombre,
			@RequestParam("lastname")String apellido,
			@RequestParam("dni")int dni){
		
		Alumno alumno = new Alumno();
		alumno.setNombreAlu(nombre);
		alumno.setApellido(apellido);
		alumno.setDni(dni);
		
		daoAlumno.save(alumno);
		Alumno alu = daoAlumno.findByDni(alumno.getDni());
		System.out.println(alu.getApellido());
		
		return "formularioAlumno";
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	/*@RequestMapping(value = "/formulario", 
			method = RequestMethod.GET)
	public ModelAndView crearAlumnoGet(){
		
		ModelAndView modelAndView = new ModelAndView();
		
		//ENVIO AL MODELO EL OBJETO A CREAR
		modelAndView.addObject("alumno", new Alumno());
		modelAndView.setViewName("formularioAlumno");
		
		return modelAndView;
	}

	@RequestMapping(value = "/formulario", method = 
			RequestMethod.POST)
			//RECIBO UN OBJETO DEL MODELO
	public ModelAndView crearAlumnoPost
	(@ModelAttribute Alumno alumno){
	
		ModelAndView modelAndView = new ModelAndView();
		
		//GUARDO EL ALUMNO QUE RECIBO
		daoAlumno.save(alumno);
		
		//ENVIO AL MODELO TODOS LOS ALUMNOS DE LA BASE DE DATOS
		modelAndView.addObject("alumnos", daoAlumno.findAll());
		modelAndView.setViewName("index");
		
		return modelAndView;
	}
	
	@RequestMapping(value = "/inscripcion", 
			method = RequestMethod.GET)
			//RECIBO EL ID DEL ALUMNO SELECCIONADO
	public ModelAndView anotarAlumnoGet
	(@RequestParam("idAlu") long idAlumno){
		
		ModelAndView modelAndView = new ModelAndView();
		
		//BUSCO AL ALUMNO CON ESE ID
		Alumno alumno = daoAlumno.findOne(idAlumno);
		
		//ENVIO AL MODELO EL ALUMNO Y TODAS LAS MATERIAS
		modelAndView.addObject("alumno", alumno);
		modelAndView.addObject("materias", daoMateria.findAll());
		modelAndView.setViewName("inscripcion");
		return modelAndView;
		
	}

	@RequestMapping(value = "/inscripcion", 
			method = RequestMethod.POST)
			//RECIBO EL ID DE LA MATERIA SELECCIONADA
	public ModelAndView anotarAlumnoPost
	(@RequestParam("idMate") long idMateria,
			//RECIBO UN ALUMNO
			@ModelAttribute Alumno alumnoHTML){

		ModelAndView modelAndView = new ModelAndView();
		
		//BUSCO UN ALUMNO QUE TENGA EL ID DEL ALUMNO QUE VIENE
		Alumno alumno = daoAlumno.findOne(alumnoHTML.getIdAlumno());
		
		//CREO UN ELEMENTO DE LA TABLA INTERMEDIA
		AluMate aluMate = new AluMate();
		//ASIGNO EL ALUMNO A LA TABLA INTERMEDIA
		aluMate.setAlumno(alumno);
		//BUSCO Y ASIGNO LA MATERIA A LA TABLA INTERMEDIA
		aluMate.setMateria(daoMateria.findOne(idMateria));
		aluMate.setEstado(false);
		
		daoAluMate.save(aluMate);
		
		modelAndView.addObject("alumnos", daoAlumno.findAll());
		modelAndView.setViewName("index");
		
		return modelAndView;
	
	}*/
	
}
